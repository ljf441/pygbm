name: Build and Publish Python Package to PyPI

on:
  push:
    branches:
      - main  # Change to your default branch if needed

jobs:
  build:
    runs-on: ubuntu-20.04  # Use an appropriate Ubuntu version

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.6'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build sphinx twine

    - name: Build package
      run: |
        python -m build

    - name: Upload package distributions
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/*

  publish-to-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.6'

    - name: Install twine
      run: |
        python -m pip install --upgrade pip
        pip install twine

    - name: Download package distributions
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

    - name: Rename distribution files
      run: |
        for file in dist/*; do
          new_name=$(echo "$file" | sed -E 's/dev[0-9]*//; s/\+.*//; s/\.{2,}/./g; s/(.*)(\.tar\.gz|\.whl)$/\1\2/')
          mv "$file" "$new_name"
        done


    - name: List distribution files
      run: |
        ls -l dist/


    - name: Publish distribution to PyPI
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}  # Ensure your token is stored in GitHub secrets
      run: |
        twine upload --verbose dist/* -u __token__ -p $PYPI_TOKEN
